// app/courses/[slug]/page.tsx
import Link from "next/link";
import { notFound } from "next/navigation";
import { getCourseBySlug } from "../../../lib/courses";

export const dynamic = "force-static";

export default async function CourseDetailPage({
  params,
}: {
  // Next.js 15: params is a Promise
  params: Promise<{ slug: string }>;
}) {
  const { slug } = await params;           // ‚úÖ params await
  const course = getCourseBySlug(slug);
  if (!course) return notFound();

  const stats = course.stats ?? { rating: 4.7, students: "‚Äî", duration: "‚Äî", lessons: 0 };

  return (
    <div className="mx-auto max-w-5xl px-4 py-10">
      {/* Header */}
      <div className="mb-6">
        <div className="mb-2 flex flex-wrap items-center gap-2">
          <span className="inline-flex items-center rounded-full bg-indigo-50 px-2.5 py-0.5 text-xs font-medium text-indigo-700 ring-1 ring-inset ring-indigo-200">
            {course.level}
          </span>
          <span className="text-xs text-gray-500">
            ‚≠ê {stats.rating.toFixed(1)} ‚Ä¢ üë• {stats.students} ‚Ä¢ ‚è±Ô∏è {stats.duration} ‚Ä¢ üìö {stats.lessons} ‡¶≤‡ßá‡¶∏‡¶®
          </span>
        </div>

        <h1 className="text-2xl font-bold text-gray-900 md:text-3xl">{course.title}</h1>
        <p className="mt-1 text-gray-600">{course.tagline}</p>

        <div className="mt-4 flex flex-wrap gap-2">
          <Link
            href={`/enroll?product=${course.slug}`}
            className="rounded-xl bg-indigo-600 px-4 py-2 text-sm font-medium text-white hover:bg-indigo-700"
          >
            ‡¶è‡¶®‡¶∞‡ßã‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®
          </Link>
          <Link
            href={`/courses/${slug}/learn`}   // ‚úÖ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá slug ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞
            className="rounded-xl border border-gray-300 bg-white px-4 py-2 text-sm text-gray-800 hover:bg-gray-50"
          >
            ‡¶°‡ßá‡¶Æ‡ßã ‡¶ü‡ßç‡¶∞‡¶æ‡¶á ‡¶ï‡¶∞‡ßÅ‡¶®
          </Link>
        </div>
      </div>

      {/* Price + Includes */}
      <div className="mb-6 grid grid-cols-1 gap-4 md:grid-cols-3">
        <div className="rounded-2xl border border-indigo-200 bg-indigo-50 p-5">
          <div className="text-sm text-indigo-700">‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶´‡¶ø</div>
          <div className="mt-1 text-2xl font-bold text-indigo-900">{course.price ?? "‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®"}</div>
          <Link
            href={`/enroll?product=${course.slug}`}
            className="mt-3 inline-block rounded-xl bg-indigo-600 px-4 py-2 text-sm font-medium text-white hover:bg-indigo-700"
          >
            ‡¶è‡¶ñ‡¶®‡¶á ‡¶è‡¶®‡¶∞‡ßã‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®
          </Link>
        </div>
        <div className="rounded-2xl border border-gray-200 bg-white p-5 md:col-span-2">
          <div className="text-sm font-semibold text-gray-900">‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá ‡¶Ø‡¶æ ‡¶Ø‡¶æ ‡¶•‡¶æ‡¶ï‡¶õ‡ßá</div>
          <ul className="mt-2 grid grid-cols-1 gap-2 text-sm text-gray-700 sm:grid-cols-2">
            {(course.includes ?? ["‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶≤‡ßá‡¶∏‡¶®", "‡¶™‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ü‡¶ø‡¶∏ ‡¶´‡¶æ‡¶á‡¶≤", "‡¶ï‡¶Æ‡¶ø‡¶â‡¶®‡¶ø‡¶ü‡¶ø ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü", "‡¶∏‡¶æ‡¶∞‡ßç‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶ü"]).map((it, i) => (
              <li key={i} className="flex items-center gap-2">
                <span className="inline-block h-1.5 w-1.5 rounded-full bg-emerald-500" /> {it}
              </li>
            ))}
          </ul>
        </div>
      </div>

      {/* Overview */}
      <section className="mb-6 rounded-2xl border border-gray-200 bg-white p-6">
        <h2 className="mb-2 text-lg font-semibold text-gray-900">‡¶ì‡¶≠‡¶æ‡¶∞‡¶≠‡¶ø‡¶â</h2>
        <p className="text-gray-700">{course.short}</p>
        <p className="mt-2 text-gray-600">{course.tagline}</p>
      </section>

      {/* Outcomes + For who + Prereqs */}
      <div className="mb-6 grid grid-cols-1 gap-4 md:grid-cols-3">
        <section className="rounded-2xl border border-gray-200 bg-white p-6">
          <h3 className="mb-3 text-base font-semibold text-gray-900">‡¶Ü‡¶™‡¶®‡¶ø ‡¶Ø‡¶æ ‡¶∂‡¶ø‡¶ñ‡¶¨‡ßá‡¶®</h3>
          <ul className="space-y-2 text-sm text-gray-700">
            {(course.outcomes ?? []).map((o, i) => (
              <li key={i} className="flex items-start gap-2">
                <span className="mt-1 inline-block h-1.5 w-1.5 rounded-full bg-indigo-500" /> {o}
              </li>
            ))}
          </ul>
        </section>

        <section className="rounded-2xl border border-gray-200 bg-white p-6">
          <h3 className="mb-3 text-base font-semibold text-gray-900">‡¶ï‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶â‡¶™‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§</h3>
          <ul className="space-y-2 text-sm text-gray-700">
            {(course.forWho ?? []).map((o, i) => (
              <li key={i} className="flex items-start gap-2">
                <span className="mt-1 inline-block h-1.5 w-1.5 rounded-full bg-emerald-500" /> {o}
              </li>
            ))}
          </ul>
        </section>

        <section className="rounded-2xl border border-gray-200 bg-white p-6">
          <h3 className="mb-3 text-base font-semibold text-gray-900">‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßÄ‡ßü‡¶§‡¶æ</h3>
          <ul className="space-y-2 text-sm text-gray-700">
            {(course.prereqs ?? []).map((o, i) => (
              <li key={i} className="flex items-start gap-2">
                <span className="mt-1 inline-block h-1.5 w-1.5 rounded-full bg-amber-500" /> {o}
              </li>
            ))}
          </ul>
        </section>
      </div>

      {/* Syllabus */}
      {course.syllabus?.length ? (
        <section className="mb-8 rounded-2xl border border-gray-200 bg-white p-6">
          <h2 className="mb-4 text-lg font-semibold text-gray-900">‡¶∏‡¶ø‡¶≤‡ßá‡¶¨‡¶æ‡¶∏</h2>
          <div className="space-y-4">
            {course.syllabus.map((m, idx) => (
              <details key={idx} className="rounded-xl border border-gray-200 bg-gray-50 p-4 open:bg-white">
                <summary className="cursor-pointer select-none text-gray-900">{m.title}</summary>
                <ul className="mt-3 space-y-2 text-sm text-gray-700">
                  {m.lessons.map((l) => (
                    <li key={l.id} className="flex items-center justify-between rounded-lg border border-gray-200 bg-white px-3 py-2">
                      <div className="flex items-center gap-2">
                        <span className="inline-block h-1.5 w-1.5 rounded-full bg-indigo-500" /> {l.title}
                      </div>
                      <span className="text-gray-500">{l.duration}</span>
                    </li>
                  ))}
                </ul>
              </details>
            ))}
          </div>
        </section>
      ) : null}

      {/* Bottom CTA */}
      <section className="rounded-2xl border border-indigo-200 bg-indigo-50 p-6 text-center">
        <h3 className="text-lg font-semibold text-indigo-900">‡¶∞‡ßá‡¶°‡¶ø?</h3>
        <p className="mt-1 text-sm text-indigo-800">‡¶Ü‡¶ú ‡¶•‡ßá‡¶ï‡ßá‡¶á ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®‚Äî‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶≤‡ßá‡¶∏‡¶®‡¶ü‡¶ø ‡¶´‡ßç‡¶∞‡¶ø ‡¶ü‡ßç‡¶∞‡¶æ‡¶á ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§</p>
        <div className="mt-4 flex justify-center gap-2">
          <Link
            href={`/enroll?product=${course.slug}`}
            className="rounded-xl bg-indigo-600 px-4 py-2 text-sm font-medium text-white hover:bg-indigo-700"
          >
            ‡¶è‡¶®‡¶∞‡ßã‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®
          </Link>
          <Link
            href={`/courses/${slug}/learn`}  // ‚úÖ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá slug ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞
            className="rounded-xl border border-indigo-300 bg-white px-4 py-2 text-sm text-indigo-700 hover:bg-indigo-100"
          >
            ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶≤‡ßá‡¶∏‡¶® ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
          </Link>
        </div>
      </section>
    </div>
  );
}
